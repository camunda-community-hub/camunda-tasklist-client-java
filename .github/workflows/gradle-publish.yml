# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-20.04
    steps:
    - name: Checks out code
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up Java environment
      uses: actions/setup-java@v1
      with:
        java-version: 11
        gpg-private-key: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_SEC }}
        gpg-passphrase: MAVEN_CENTRAL_GPG_PASSPHRASE

    - name: Run Maven
      run: mvn -B clean install

    - name: Deploy SNAPSHOT / Release
      uses: camunda-community-hub/community-action-maven-release@v1.0.9
      with:
        release-version: ${{ github.event.release.tag_name }}
        release-profile: release,community-action-maven-release
        nexus-usr: ${{ secrets.NEXUS_USR }}
        nexus-psw: ${{ secrets.NEXUS_PSW }}
        maven-usr: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_USR }}
        maven-psw: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_PSW }}
        maven-gpg-passphrase: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_PASSPHRASE }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
      id: release

    - name: Attach artifacts to GitHub Release (Release only)
      if: github.event.release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.release.outputs.artifacts_archive_path }}
        asset_name: ${{ steps.release.outputs.artifacts_archive_path }}
        asset_content_type: application/zip